{"version":3,"sources":["Components/Remove.js","Components/Person.js","Components/Filter.js","Components/Message.js","services/persons.js","App.js","index.js"],"names":["Remove","onClick","Person","person","key","name","number","Filter","value","onChange","Message","msg","style","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","message","setMessage","messageStyle","setMessageStyle","useEffect","personsService","initialPersons","handleMessage","type","setTimeout","event","target","onSubmit","preventDefault","personObject","length","find","window","confirm","returnedPerson","prev","returned","updatedPersons","updatePersons","catch","error","p","concat","toLowerCase","includes","map","n","res","removePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c20bd8be.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Remove = ({onClick}) => {\r\n    return(\r\n        <div>\r\n            <button onClick={onClick}>Delete</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Remove","import React from 'react'\r\nimport Remove from './Remove'\r\n\r\n\r\nconst Person = ({person, onClick}) =>{\r\n    return(\r\n        <li key={person.name}>\r\n            {person.name} --- {person.number}\r\n            <Remove onClick={onClick}/>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Filter = ({value, onChange}) =>{\r\n    return(\r\n        <div>\r\n            Filter: <input\r\n            value={value}\r\n            onChange={onChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Message = ({msg, style})  =>{\r\n    if(msg === null){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className={style}>\r\n            {msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import axios from 'axios'\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data)\r\n};\r\n\r\nexport default {getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport Person from './Components/Person'\nimport Filter from './Components/Filter'\nimport Message from \"./Components/Message\";\nimport personsService from './services/persons'\n\nimport './index.css'\n\nconst App = () => {\n    const [ persons, setPersons] = useState([]);\n    const [ newName, setNewName ] = useState('');\n    const [ newNumber, setNewNumber] = useState('');\n    const [ filter, setFilter] = useState('');\n    const [ message, setMessage] = useState('');\n    const [ messageStyle, setMessageStyle ] = useState('');\n\n    useEffect(() => {\n        personsService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, []);\n\n    const filterPhonebook = (event) => {\n        setFilter(event.target.value)\n    };\n\n    const handlePersonChange = (event) =>{\n        setNewName(event.target.value)\n    };\n\n    const handleNumberChange = (event) =>{\n        setNewNumber(event.target.value)\n    };\n\n    const handleMessage = (message, type) => {\n        setMessage(message);\n        setMessageStyle(type)\n        setTimeout(() => {\n            setMessage(null)\n            setMessageStyle(null)\n        }, 5000)\n    };\n\n    const updatePersons = (prev, returned) => {\n        const updatedPersons = [...prev];\n        updatedPersons[returned.id - 1] = returned;\n        setPersons(updatedPersons)\n    };\n\n    const addPerson = (event) =>{\n        event.preventDefault();\n        const personObject = {\n            name: newName,\n            number: newNumber,\n            id: persons.length + 1\n        };\n\n        if(personObject.name !== '' || personObject.number !== ''){\n            if(persons.find(person=> person.name === personObject.name)){\n                if(window.confirm(`${personObject.name} is already in the phonebook!`+\n                                    ` Do you want to update the number?`)){\n                    const id = persons.find(person => person.name === personObject.name).id;\n                    personsService\n                        .update(id, personObject)\n                        .then(returnedPerson => {\n                            updatePersons(persons, returnedPerson);\n                            setNewName('');\n                            setNewNumber('');\n                            handleMessage(`${returnedPerson.name} was successfully updated!`, 'success')\n                        })\n                        .catch(error =>{\n                            handleMessage(`${personObject.name} couldn't be found in the database`, 'error')\n                            setPersons(persons.find(p => p.id !== id))\n                        })\n\n                }\n            } else{\n                personsService\n                    .create(personObject)\n                    .then(returnedPerson => {\n                        setPersons(persons.concat(returnedPerson));\n                        setNewName('');\n                        setNewNumber('');\n                        handleMessage(`Person ${returnedPerson.name} was successfully added!`, 'success');\n                    })\n                    .catch(error =>{\n                        handleMessage(`Unexpected error!`, 'error')\n                    })\n            }\n        }\n    };\n\n    const removePerson = (id, name) =>{\n        if(window.confirm(`Are you sure want to delete? ${name}`)){\n            const person = persons.find(n => n.id === id);\n            personsService\n                .remove(person.id)\n                .then(res => {\n                    setPersons(persons.filter(person => person.id !== id))\n                })\n                .catch(error =>{\n                    handleMessage(`Person ${name } was already removed from the server`, 'error')\n                    })\n        }\n    };\n\n\n    return (\n        <div>\n            <Message msg={message} style={messageStyle}/>\n            <h2>Search</h2>\n                <Filter value={filter} onChange={filterPhonebook}/>\n            <h2>Phonebook</h2>\n            <form onSubmit={addPerson}>\n                <div>\n                    Name: <input\n                    value={newName}\n                    onChange={handlePersonChange} />\n                </div>\n                <div>\n                    Number: <input\n                    value={newNumber}\n                    onChange={handleNumberChange}/>\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n            <h2>Numbers</h2>\n            <ul>\n                {/*First returns a new array after filtering, then maps (creates a new array) which displays names and numbers*/}\n                {persons.filter(person =>\n                    person.name.toLowerCase().includes(filter.toLowerCase()))\n                        .map((person) =>\n                        <Person key={person.name} person={person} onClick={() => removePerson(person.id, person.name)}/>\n                )}\n            </ul>\n        </div>\n    )\n};\n\nexport default App\n\n/*\n* 2.6 - DONE\n* 2.7 - DONE\n* 2.8 - DONE\n* 2.9 - DONE\n* 2.10 - DONE\n* 2.11 - DONE\n* 2.15 - DONE\n* 2.16 - DONE\n* 2.17 - DONE\n* 2.18 - DONE\n* */","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}